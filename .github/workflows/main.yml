
name: Push iOS build on TestFlight

on:
  push:
    branches:
      - main

jobs:
  ios_deployment:
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}
      CERTIFICATE_PRIVATE_KEY: ${{ secrets.CERTIFICATE_PRIVATE_KEY }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: beta
          version: 3.36.0-0.1.pre
          
      - name: Install dependencies & Lint check
        run: |
          flutter clean
          flutter pub get
          
      - name: Install the CodeMagic CLI
        run:  pip install codemagic-cli-tools

      - name: Initialize keychain
        run: keychain initialize

      - name: Fetch signing files
        run: |
          app-store-connect fetch-signing-files "$dev.theananta.chittiapp" \
          --issuer-id APP_STORE_CONNECT_ISSUER_ID
          --type IOS_APP_STORE \
          --create    
      - name: Set up signing certificate
        run: keychain add-certificates

      - name: Set up Code signing settings on Xcode project
        run: xcode-project use-profiles

      - name: Build IPA for Distribution
        run: |
          file='VERSION'
          fileData=`cat $file`
          IFS='.'
          read -a versionValue <<< "$fileData"
          buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
          IFS=''
          buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
          echo "Uploading build $buildName"
          flutter build ipa --release --build-number=$buildNumber --build-name=$buildName --export-options-plist=$HOME/export_options.plist

      - name: Upload IPA to App Store Connect
        run: |
          APP_FILE=$(find $(pwd) -name "*.ipa")
          app-store-connect publish \
          --path "$APP_FILE" 

